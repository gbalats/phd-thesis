%--------------------------------------------------------------------
% LLVM Styling
%--------------------------------------------------------------------

% Entities

\newcommand{\alloc}[1]{\widehat{#1}}
\newcommand{\var}[1]{\texttt{#1}}
\newcommand{\constant}[1]{#1}
\newcommand{\op}[1]{#1}
\newcommand{\tp}[1]{\texttt{#1}}
\newcommand{\instr}[1]{\code{#1}}

\newcommand{\functions}{\mathbb{F}}
\newcommand{\gvars}{\mathbb{G}}
\newcommand{\vars}{\mathbb{V}}


% Points-to relations

\newcommand{\vpt}[2]{\var{#1} \mapsto \alloc{#2}}
\newcommand{\cpt}[2]{\constant{#1} \mapsto \alloc{#2}}
\newcommand{\opt}[2]{\op{#1} \mapsto \alloc{#2}}
\newcommand{\derefpt}[2]{\alloc{#1} \leadsto \alloc{#2}}

% Type relations
\newcommand{\typefunc}{\text{\emph{type}}}
\newcommand{\gtype}[1]{\typefunc(#1)}
\newcommand{\alloctype}[1]{\typefunc(\alloc{#1})}
\newcommand{\vartype}[1]{\typefunc(\var{#1})}
\newcommand{\codetype}[1]{\typefunc(\code{#1})}

\newcommand{\indices}[1]{\text{\emph{indices}}(\tp{#1})}
\newcommand{\offsetof}{\text{\emph{offsetof}}}

%--------------------------------------------------------------------
% LLVM Bitcode Instructions
%--------------------------------------------------------------------

\newcommand{\alloca}[2]{\instr{alloca}\; \tp{#1},\, \op{#2}}
\newcommand{\malloc}[1]{\instr{malloc}\; \op{#1}}
\newcommand{\cast}[2]{(\tp{#1\,})\: \var{#2}}
\newcommand{\fieldaddr}[2]{\code{\&} \var{#1} \code{->} #2}
\newcommand{\arreladdr}[2]{\code{\&} \var{#1}\, [\op{#2}]}


% Alloca Instruction
\NewDocumentCommand{\allocainstr}{ o m m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \alloca{#3}{#4}}
}

% Malloc Instruction
\NewDocumentCommand{\mallocinstr}{ o m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \malloc{#3}}
}

% Cast Instruction
\NewDocumentCommand{\castinstr}{ o m m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \cast{#3}{#4}}
}

% Load Instruction
\NewDocumentCommand{\loadinstr}{ o m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = *\, \var{#3}}
}

% Store Instruction
\NewDocumentCommand{\storeinstr}{ o m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {*\, \var{#2} = \var{#3}}
}

% Return Instruction
\NewDocumentCommand{\returninstr}{ o m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\instr{return}\; \var{#2}}
}

% Field Access Instruction
\NewDocumentCommand{\fieldaccess}{ o m m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \fieldaddr{#3}{#4}}
}

% Array Access Instruction
\NewDocumentCommand{\arrayaccess}{ o m m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \arreladdr{#3}{#4}}
}

% Call Instruction
\NewDocumentCommand{\callinstr}{ o m m o >{\SplitList{,}} o }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \op{#3}(
    \IfNoValueTF {#4}{\ldots}{#4 \ProcessList{#5}{\processarg}}
    )
  }
}
\newcommand\processarg[1]{,\, \op{#1}}

% Phi Instruction
\NewDocumentCommand{\phiinstr}{ o m m >{\SplitList{,}} m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} =
    \instr{phi} (\op{#3} \ProcessList{#4}{\processarg})
  }
}

% Pointer Arithmetic Instruction
\NewDocumentCommand{\ptraccess}{ o m m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \var{#3} + #4}
}
