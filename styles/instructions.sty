%--------------------------------------------------------------------
% LLVM Bitcode Instructions
%--------------------------------------------------------------------


\newcommand{\alloca}[2]{\instr{alloca}\; \tp{#1},\, \op{#2}}
\newcommand{\malloc}[1]{\instr{malloc}\; \op{#1}}
\newcommand{\cast}[2]{(\tp{#1\,})\: \var{#2}}
\newcommand{\fieldaddr}[2]{\code{\&} \var{#1} \code{->} #2}
\newcommand{\arreladdr}[2]{\code{\&} \var{#1}\, [\op{#2}]}


% Alloca Instruction
\NewDocumentCommand{\allocainstr}{ o m m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \alloca{#3}{#4}}
}

% Malloc Instruction
\NewDocumentCommand{\mallocinstr}{ o m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \malloc{#3}}
}

% Cast Instruction
\NewDocumentCommand{\castinstr}{ o m m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \cast{#3}{#4}}
}

% Load Instruction
\NewDocumentCommand{\loadinstr}{ o m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = *\, \var{#3}}
}

% Store Instruction
\NewDocumentCommand{\storeinstr}{ o m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {*\, \var{#2} = \var{#3}}
}

% Return Instruction
\NewDocumentCommand{\returninstr}{ o m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\instr{return}\; \var{#2}}
}

% Field Access Instruction
\NewDocumentCommand{\fieldaccess}{ o m m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \fieldaddr{#3}{#4}}
}

% Array Access Instruction
\NewDocumentCommand{\arrayaccess}{ o m m m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \arreladdr{#3}{#4}}
}

% Call Instruction
\NewDocumentCommand{\callinstr}{ o m m o >{\SplitList{,}} o }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} = \op{#3}(
    \IfNoValueTF {#4}{\ldots}{#4 \ProcessList{#5}{\processarg}}
    )
  }
}
\newcommand\processarg[1]{,\, \op{#1}}

% Phi Instruction
\NewDocumentCommand{\phiinstr}{ o m m >{\SplitList{,}} m }{%
  \IfValueTF {#1}{#1:\ }{}
  {\var{#2} =
    \instr{phi} (\op{#3} \ProcessList{#4}{\processarg})
  }
}
